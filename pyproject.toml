[tool.poetry]
name = "toxic-classifier"
version = "0.1.0"
description = ""
authors = ["Chinedu Ezeofor <examplemail.com>"]

[tool.poetry.dependencies]
python = "~3.10"
polars = {extras = ["pyarrow"], version = "^0.20.21"}
rich = "^13.7.1"
hydra-core = "^1.3.2"
fastapi = "^0.110.2"
pre-commit = "^3.7.0"
certifi = "^2024.2.2"
pandas = "^2.2.2"
typeguard = "^4.2.1"
scikit-learn = "^1.4.2"
spacy = "^3.7.4"
ray = {extras = ["default"], version = "^2.11.0"}
google-api-python-client = "^2.126.0"
transformers = "^4.40.0"
datasets = "^2.19.0"
tokenizers = "^0.19.1"
mlflow = "^2.12.1"

[tool.poetry.group.dev.dependencies]
dvc = "^3.50.0"
dvc-gs = "^3.0.1"
mypy = "^1.9.0"
ruff = "^0.4.0"
pytest = "^8.1.1"
watermark = "^2.4.3"
ipykernel = "^6.29.4"
jupyter = "^1.0.0"
matplotlib = "^3.8.4"
nb-black-formatter = "^1.0.1"
black = "^24.4.0"

[tool.mypy]
mypy_path = ["fast_token_classifier"]
python_version = "3.11"
show_error_context = true
ignore_missing_imports = true
warn_incomplete_stub = false
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = false
warn_unused_configs = true

[tool.ruff]
# Set the maximum line length to 100.
line-length = 100
indent-width = 4

# Assume Python 3.11
target-version = "py311"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr", ".direnv", ".dockerignore", ".eggs", ".env", ".git",
    ".gitignore", ".git-rewrite",  ".hg", ".mypy_cache", ".nox",
    ".pants.d", ".pytype", ".ruff_cache", ".svn", ".tox", ".venv",
    "__pypackages__", "_build", "buck-out", "build", "dist", "env",
    "node_modules", "venv",
]

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set.
extend-select = ["E501"]
select = [
    "I001", "ANN201", "ANN202", "S107", "PIE796", "T201", "PYI009",
    "PYI012", "PYI026", "RET505", "SIM115", "F401",
    ]
ignore = ["E741", "PT011", "PLR1722", "D419", "D101", "D100", "D107", "ANN401", "PLC0414"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Pytest
[tool.pytest.ini_options]
addopts = "--strict-markers" # Ensure that the markers are defined
markers = [
            "integration: Run the integration tests.",
            "differential: Run the integration tests."
            ]
